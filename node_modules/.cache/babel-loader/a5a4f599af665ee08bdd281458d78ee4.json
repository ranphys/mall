{"remainingRequest":"C:\\Users\\明希\\Desktop\\前端\\案例\\vuejs\\mall\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\明希\\Desktop\\前端\\案例\\vuejs\\mall\\src\\network\\request.js","dependencies":[{"path":"C:\\Users\\明希\\Desktop\\前端\\案例\\vuejs\\mall\\src\\network\\request.js","mtime":1622714390972},{"path":"C:\\Users\\明希\\Desktop\\前端\\案例\\vuejs\\mall\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\明希\\Desktop\\前端\\案例\\vuejs\\mall\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import axios from 'axios';\nexport function request(config) {\n  var instance = new axios.create({\n    //baseURL:'http://123.207.32.32:8000',\n    baseURL: 'http://127.0.0.1:3000',\n    timeout: 5000\n  }); // 请求拦截器\n\n  instance.interceptors.request.use(function (config) {\n    //拦截后需要将拦截下来的请求数据返回发送\n    return config;\n  }, function (err) {\n    console.log(err);\n  }); // 相应拦截器\n\n  instance.interceptors.response.use(function (res) {\n    // 拦截后需要将拦截下来处理成的结果返回\n    return res.data;\n  }, function (err) {\n    console.log(err);\n  });\n  return instance(config);\n}",{"version":3,"sources":["C:/Users/明希/Desktop/前端/案例/vuejs/mall/src/network/request.js"],"names":["axios","request","config","instance","create","baseURL","timeout","interceptors","use","err","console","log","response","res","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,MAAMC,QAAQ,GAAG,IAAIH,KAAK,CAACI,MAAV,CAAiB;AAC9B;AACAC,IAAAA,OAAO,EAAE,uBAFqB;AAG9BC,IAAAA,OAAO,EAAE;AAHqB,GAAjB,CAAjB,CAD4B,CAO5B;;AACAH,EAAAA,QAAQ,CAACI,YAAT,CAAsBN,OAAtB,CAA8BO,GAA9B,CAAkC,UAAAN,MAAM,EAAI;AACxC;AACA,WAAOA,MAAP;AACH,GAHD,EAGG,UAAAO,GAAG,EAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEH,GAND,EAR4B,CAgB5B;;AACAN,EAAAA,QAAQ,CAACI,YAAT,CAAsBK,QAAtB,CAA+BJ,GAA/B,CAAmC,UAAAK,GAAG,EAAI;AACtC;AACA,WAAOA,GAAG,CAACC,IAAX;AACH,GAHD,EAGG,UAAAL,GAAG,EAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GALD;AAOA,SAAON,QAAQ,CAACD,MAAD,CAAf;AACH","sourcesContent":["import axios from 'axios'\n\nexport function request(config) {\n    const instance = new axios.create({\n        //baseURL:'http://123.207.32.32:8000',\n        baseURL: 'http://127.0.0.1:3000',\n        timeout: 5000\n    });\n\n    // 请求拦截器\n    instance.interceptors.request.use(config => {\n        //拦截后需要将拦截下来的请求数据返回发送\n        return config;\n    }, err => {\n        console.log(err)\n\n    })\n\n    // 相应拦截器\n    instance.interceptors.response.use(res => {\n        // 拦截后需要将拦截下来处理成的结果返回\n        return res.data\n    }, err => {\n        console.log(err)\n    })\n\n    return instance(config)\n}"]}]}